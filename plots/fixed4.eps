%!PS-Adobe-2.0 EPSF-2.0
%%Title: plots/fixed4.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Wed Apr 30 13:36:07 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plots/fixed4.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (petur)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Apr 30 13:36:07 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
602 448 M
63 0 V
6282 0 R
-63 0 V
stroke
518 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 890 M
63 0 V
6282 0 R
-63 0 V
stroke
518 890 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 1333 M
63 0 V
6282 0 R
-63 0 V
stroke
518 1333 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 1775 M
63 0 V
6282 0 R
-63 0 V
stroke
518 1775 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 15)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 2217 M
63 0 V
6282 0 R
-63 0 V
stroke
518 2217 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 2660 M
63 0 V
6282 0 R
-63 0 V
stroke
518 2660 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 25)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 3102 M
63 0 V
6282 0 R
-63 0 V
stroke
518 3102 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 3544 M
63 0 V
6282 0 R
-63 0 V
stroke
518 3544 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 35)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 3986 M
63 0 V
6282 0 R
-63 0 V
stroke
518 3986 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 4429 M
63 0 V
6282 0 R
-63 0 V
stroke
518 4429 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 45)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 4871 M
63 0 V
6282 0 R
-63 0 V
stroke
518 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 448 M
0 63 V
0 4360 R
0 -63 V
stroke
602 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1660 448 M
0 63 V
0 4360 R
0 -63 V
stroke
1660 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2717 448 M
0 63 V
0 4360 R
0 -63 V
stroke
2717 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3775 448 M
0 63 V
0 4360 R
0 -63 V
stroke
3775 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 150)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4832 448 M
0 63 V
0 4360 R
0 -63 V
stroke
4832 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5890 448 M
0 63 V
0 4360 R
0 -63 V
stroke
5890 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 250)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6947 448 M
0 63 V
0 4360 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
602 4871 N
602 448 L
6345 0 V
0 4423 V
-6345 0 V
Z stroke
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (SG-value)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3774 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Pile size)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
0.500 UP
1.000 UL
LT0
LC0 setrgbcolor
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
602 448 CircleF
623 448 CircleF
644 448 CircleF
665 448 CircleF
687 448 CircleF
708 448 CircleF
729 448 CircleF
750 448 CircleF
771 448 CircleF
792 448 CircleF
814 536 CircleF
835 536 CircleF
856 536 CircleF
877 536 CircleF
898 536 CircleF
919 536 CircleF
940 625 CircleF
962 625 CircleF
983 625 CircleF
1004 625 CircleF
1025 625 CircleF
1046 625 CircleF
1067 713 CircleF
1088 713 CircleF
1110 713 CircleF
1131 713 CircleF
1152 713 CircleF
1173 713 CircleF
1194 802 CircleF
1215 802 CircleF
1237 802 CircleF
1258 802 CircleF
1279 802 CircleF
1300 802 CircleF
1321 890 CircleF
1342 890 CircleF
1363 890 CircleF
1385 890 CircleF
1406 890 CircleF
1427 890 CircleF
1448 979 CircleF
1469 979 CircleF
1490 979 CircleF
1511 979 CircleF
1533 979 CircleF
1554 979 CircleF
1575 1067 CircleF
1596 1067 CircleF
1617 1067 CircleF
1638 1067 CircleF
1660 1067 CircleF
1681 1067 CircleF
1702 1156 CircleF
1723 1156 CircleF
1744 1156 CircleF
1765 1156 CircleF
1786 1156 CircleF
1808 1156 CircleF
1829 1244 CircleF
1850 1244 CircleF
1871 1244 CircleF
1892 1244 CircleF
1913 1244 CircleF
1934 1244 CircleF
1956 1333 CircleF
1977 1333 CircleF
1998 1333 CircleF
2019 1333 CircleF
2040 1333 CircleF
2061 1333 CircleF
2083 1421 CircleF
2104 1421 CircleF
2125 1421 CircleF
2146 1421 CircleF
2167 1421 CircleF
2188 1421 CircleF
2209 1510 CircleF
2231 1510 CircleF
2252 1510 CircleF
2273 1510 CircleF
2294 1510 CircleF
2315 1510 CircleF
2336 1598 CircleF
2357 1598 CircleF
2379 1598 CircleF
2400 1598 CircleF
2421 1598 CircleF
2442 1598 CircleF
2463 1686 CircleF
2484 1686 CircleF
2506 1686 CircleF
2527 1686 CircleF
2548 1686 CircleF
2569 1686 CircleF
2590 1775 CircleF
2611 1775 CircleF
2632 1775 CircleF
2654 1775 CircleF
2675 1775 CircleF
2696 1775 CircleF
2717 1863 CircleF
2738 1863 CircleF
2759 1863 CircleF
2780 1863 CircleF
2802 1863 CircleF
2823 1863 CircleF
2844 1952 CircleF
2865 1952 CircleF
2886 1952 CircleF
2907 1952 CircleF
2929 1952 CircleF
2950 1952 CircleF
2971 2040 CircleF
2992 2040 CircleF
3013 2040 CircleF
3034 2040 CircleF
3055 2040 CircleF
3077 2040 CircleF
3098 2129 CircleF
3119 2129 CircleF
3140 2129 CircleF
3161 2129 CircleF
3182 2129 CircleF
3203 2129 CircleF
3225 2217 CircleF
3246 2217 CircleF
3267 2217 CircleF
3288 2217 CircleF
3309 2217 CircleF
3330 2217 CircleF
3352 2306 CircleF
3373 2306 CircleF
3394 2306 CircleF
3415 2306 CircleF
3436 2306 CircleF
3457 2306 CircleF
3478 2394 CircleF
3500 2394 CircleF
3521 2394 CircleF
3542 2394 CircleF
3563 2394 CircleF
3584 2394 CircleF
3605 2483 CircleF
3626 2483 CircleF
3648 2483 CircleF
3669 2483 CircleF
3690 2483 CircleF
3711 2483 CircleF
3732 2571 CircleF
3753 2571 CircleF
3775 2571 CircleF
3796 2571 CircleF
3817 2571 CircleF
3838 2571 CircleF
3859 2660 CircleF
3880 2660 CircleF
3901 2660 CircleF
3923 2660 CircleF
3944 2660 CircleF
3965 2660 CircleF
3986 2748 CircleF
4007 2748 CircleF
4028 2748 CircleF
4049 2748 CircleF
4071 2748 CircleF
4092 2748 CircleF
4113 2836 CircleF
4134 2836 CircleF
4155 2836 CircleF
4176 2836 CircleF
4198 2836 CircleF
4219 2836 CircleF
4240 2925 CircleF
4261 2925 CircleF
4282 2925 CircleF
4303 2925 CircleF
4324 2925 CircleF
4346 2925 CircleF
4367 3013 CircleF
4388 3013 CircleF
4409 3013 CircleF
4430 3013 CircleF
4451 3013 CircleF
4472 3013 CircleF
4494 3102 CircleF
4515 3102 CircleF
4536 3102 CircleF
4557 3102 CircleF
4578 3102 CircleF
4599 3102 CircleF
4621 3190 CircleF
4642 3190 CircleF
4663 3190 CircleF
4684 3190 CircleF
4705 3190 CircleF
4726 3190 CircleF
4747 3279 CircleF
4769 3279 CircleF
4790 3279 CircleF
4811 3279 CircleF
4832 3279 CircleF
4853 3279 CircleF
4874 3367 CircleF
4895 3367 CircleF
4917 3367 CircleF
4938 3367 CircleF
4959 3367 CircleF
4980 3367 CircleF
5001 3456 CircleF
5022 3456 CircleF
5044 3456 CircleF
5065 3456 CircleF
5086 3456 CircleF
5107 3456 CircleF
5128 3544 CircleF
5149 3544 CircleF
5170 3544 CircleF
5192 3544 CircleF
5213 3544 CircleF
5234 3544 CircleF
5255 3633 CircleF
5276 3633 CircleF
5297 3633 CircleF
5318 3633 CircleF
5340 3633 CircleF
5361 3633 CircleF
5382 3721 CircleF
5403 3721 CircleF
5424 3721 CircleF
5445 3721 CircleF
5467 3721 CircleF
5488 3721 CircleF
5509 3809 CircleF
5530 3809 CircleF
5551 3809 CircleF
5572 3809 CircleF
5593 3809 CircleF
5615 3809 CircleF
5636 3898 CircleF
5657 3898 CircleF
5678 3898 CircleF
5699 3898 CircleF
5720 3898 CircleF
5741 3898 CircleF
5763 3986 CircleF
5784 3986 CircleF
5805 3986 CircleF
5826 3986 CircleF
5847 3986 CircleF
5868 3986 CircleF
5890 4075 CircleF
5911 4075 CircleF
5932 4075 CircleF
5953 4075 CircleF
5974 4075 CircleF
5995 4075 CircleF
6016 4163 CircleF
6038 4163 CircleF
6059 4163 CircleF
6080 4163 CircleF
6101 4163 CircleF
6122 4163 CircleF
6143 4252 CircleF
6164 4252 CircleF
6186 4252 CircleF
6207 4252 CircleF
6228 4252 CircleF
6249 4252 CircleF
6270 4340 CircleF
6291 4340 CircleF
6313 4340 CircleF
6334 4340 CircleF
6355 4340 CircleF
6376 4340 CircleF
6397 4429 CircleF
6418 4429 CircleF
6439 4429 CircleF
6461 4429 CircleF
6482 4429 CircleF
6503 4429 CircleF
6524 4517 CircleF
6545 4517 CircleF
6566 4517 CircleF
6587 4517 CircleF
6609 4517 CircleF
6630 4517 CircleF
6651 4606 CircleF
6672 4606 CircleF
6693 4606 CircleF
6714 4606 CircleF
6736 4606 CircleF
6757 4606 CircleF
6778 4694 CircleF
6799 4694 CircleF
6820 4694 CircleF
6841 4694 CircleF
6862 4694 CircleF
6884 4694 CircleF
6905 4783 CircleF
6926 4783 CircleF
% End plot #1
1.000 UL
LTb
LCb setrgbcolor
602 4871 N
602 448 L
6345 0 V
0 4423 V
-6345 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
